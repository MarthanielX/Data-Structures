import java.util.*;
import java.io.*;

public class Deck {

   private Node head;

   public class Node{
   
      private Integer data;
      private Node prev; 
      private Node next;
       
      public Node (Integer data, Node prev, Node next){
         this.data = data;
         this.prev = prev;
         this.next = next;
      }
   }
   
   public Deck(String filename) throws FileNotFoundException{
      File file = new File(filename);
      Scanner input = new Scanner(file);
      if (input.hasNext()){
         head = new Node(input.nextInt(), null, null);
      }
      Node current = head;
      while (input.hasNext()){
         Node newNode = new Node (input.nextInt(), current, null);
         current.next = newNode;
         current = newNode;
      }
      current.next = head;
      head.prev = current;
   }
   
   public void print(int n){
      Node current = head;
      for (int i = 0; i < n; i++){
         System.out.print(current.data + " ");
         current = current.next;
      }
      System.out.println();
   }
   
   public void printBackwards(int n){
      Node current = head.prev;
      for (int i = 0; i < n; i++){
         System.out.print(current.data + " ");
         current = current.prev;
      }
      System.out.println();

   }
   
   public int nextKeyValue(){
   
      // find A joker, swap with card after
      Node current = findCard(27);
      swapValue(current, current.next);
      
      // find B joker, move it 2 cards down
      current = findCard(28);
      swapValue(current, current.next);
      current = current.next;
      swapValue(current, current.next);
      
      // triple cut: switch above first joker with below 2nd
      // Nodes between head and tail are the ones to be moved
      Node zone1Start = head.prev;
      // set zone1End to first joker
      Node zone1End = head; 
      while (zone1End.data != 27 && zone1End.data != 28){
         zone1End = zone1End.next;
      }
      // set zone2head to second joker
      Node zone2Start = zone1End.next;
      while (zone1End.data != 27 && zone1End.data != 28){
         zone2Start = zone2Start.next;
      }
      Node zone2Tail = head;
      
      Node temp = zone2Start.next;
      zone2Start.next = zone1start.next;
      zone2End.prev.next = temp;
      head = zone1End;
    
      
      
      // need to switch pointers for zo
      
      
    
      // step 4
      
      // step 5      

      return head.data;
   }

   private void swapValue (Node a, Node b){ 
      int temp = a.data;
      a.data = b.data;
      b.data = temp;
   }
   
   private Node findCard(int value){
      Node current = head;
      while (current.data != value){
         current = current.next;
      }
      return current;
   }
}        